[{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/Commands.html","id":"r-commands","dir":"Articles","previous_headings":"","what":"R Commands","title":"R Commands for Causal Inference","text":"document contains example code blocks, can used exercise bcrot dataset.","code":"library(APTSCausalInference) library(ggplot2) data(bcrot)"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/Commands.html","id":"plotting","dir":"Articles","previous_headings":"R Commands","what":"Plotting","title":"R Commands for Causal Inference","text":"gives histograms comparing quality life hormone treatment control. gives density plot proposensity score (ps).","code":"plot.qol <- ggplot(bcrot, aes(x=qol, after_stat(density)), fill=as.factor(hormon)) +     geom_histogram(aes(fill=as.factor(hormon)), color=c(\"#e9ecef\"), binwidth = 2) +     facet_grid(as.factor(hormon) ~ .) +     labs(x = \"Quality of life\", y = \"Density\") +     scale_fill_manual(values=c(\"#69b3a2\", \"#337CA0\"),                       name=\"Hormonal\\ntreatment\",                       breaks=c(\"0\", \"1\"),                       labels=c(\"no\", \"yes\")) +     theme_light() plot.qol # plot density ggplot(bcrot, aes(ps, fill = as.factor(hormon))) +   geom_density(alpha = 0.5) +   labs(x = \"Propensity score\",        y = \"Density\",        fill = \"Hormone\\ntreatment\") +   scale_fill_manual(values=c(\"#69b3a2\", \"#337CA0\"),                     name=\"Hormonal\\ntreatment\",                     breaks=c(\"0\", \"1\"),                     labels=c(\"no\", \"yes\")) +   theme_light()"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/Commands.html","id":"love-plots","dir":"Articles","previous_headings":"R Commands","what":"Love Plots","title":"R Commands for Causal Inference","text":"Love plots can obtained command cobalt::love.plot. Make sure put right entry right-hand side formula, data argument!","code":"cobalt::love.plot(hormon_i ~ XXX ,                    data =  XXX  ,                    weights = bcrot$w,                   s.d.denom = \"pooled\",                   thresholds = c(m = .1))"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/Commands.html","id":"subsetting-and-filtering","dir":"Articles","previous_headings":"R Commands","what":"Subsetting and Filtering","title":"R Commands for Causal Inference","text":"","code":"# restrict dataset and transformation bcrot2 <- bcrot %>% filter(age >= 40,      # keep only individuals over 40                            XXX) %>%   # XXXX FILL IN! w/>= 1 cancerous node                     mutate(age2 = age * age) %>%    # add age²                     select(-c(ps, w))      # drop propensity score and weights"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/Commands.html","id":"regression-standardization","dir":"Articles","previous_headings":"R Commands","what":"Regression Standardization","title":"R Commands for Causal Inference","text":"","code":"fit <- glm(qol ~ hormon*age + XXXX,  ## fill in other variables!            data = bcrot2) fit.std <- stdGlm(fit = fit, data = as.data.frame(bcrot2), X = \"hormon\") print(summary(fit.std)) plot(fit.std)  # Confidence interval: Mean difference  summary(fit.std, contrast = \"difference\", reference = \"0\")"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/Commands.html","id":"aipw","dir":"Articles","previous_headings":"R Commands","what":"AIPW","title":"R Commands for Causal Inference","text":"","code":"# Build SuperLearner libraries for outcome (Q) and exposure models (g) sl.lib <- c(\"SL.mean\",\"SL.glm\")    # Construct an aipw object for later estimations  AIPW_SL <- AIPW::AIPW$new(Y = bcrot2$qol,                           A = bcrot2$hormon_i,                           W = subset(bcrot2, select = c(XXX)),   # fill in!                           Q.SL.library = sl.lib,                           g.SL.library = sl.lib,                           k_split = 10,                           verbose = TRUE)  # Fit the data to the AIPW object and check the balance of propensity scores raipw <- AIPW_SL$fit()$summary() AIPW_SL$fit()$plot.p_score()$plot.ip_weights()  # Truncate weights (default truncation is set to 0.025) AIPW_SL$fit()$summary(g.bound = c(0.05, 0.95))$plot.p_score()$plot.ip_weights()  # Calculate average treatment effects among the treated/untreated (controls) (ATT/ATC) AIPW_SL$stratified_fit()$summary()   # extract weights for loveplots # AIPW_SL$plot.ip_weights() bcrot2$aipw <- AIPW_SL$ip_weights.plot$data$ip_weights"},{"path":[]},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/installation.html","id":"scenario-1-you-have-a-github-account","dir":"Articles","previous_headings":"How to install: Step-by-step","what":"Scenario 1: You have a GitHub account","title":"Installation: Step-by-step","text":"1. Generate Personal Access Token (PAT) Go [GitHub → Settings → Developer Settings → Personal Access Tokens → Tokens (classic)]. Click “Generate new token”. Give name (e.g., R Pak Token). R packages: repo read:packages enough. Click Generate token. Copy token immediately — won’t see . 2. Set PAT R temporarily works current R session: 3. Set PAT permanently opens .Renviron file. Add line: Save file restart R. Now GitHub installs automatically use PAT. 4. Install packages GitHub","code":"Sys.setenv(GITHUB_PAT = \"your_personal_access_token_here\") install.packages(\"usethis\")  # if not already installed  usethis::edit_r_environ() GITHUB_PAT=your_personal_access_token_here # during installation: plz update all packages!!! install.packages(\"pak\") options(pkg.build_vignettes = TRUE) # important to build the vignette pak::pkg_install(\"bips-hb/APTS_Causal_Inference\")  # load package library(APTSCausalInference)  # Load the data data(bcrot)"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/installation.html","id":"scenario-2-you-do-not-have-a-github-account","dir":"Articles","previous_headings":"How to install: Step-by-step","what":"Scenario 2: You do NOT have a GitHub account","title":"Installation: Step-by-step","text":"GitHub account, download package manually Go package’s GitHub page. Click Code → Download ZIP. Unzip folder. R (change path!!!!): installs package without needing GitHub credentials.","code":"setwd(\"path/to/APTS_Causal_Inference/\")  install.packages(\"pak\") options(pkg.build_vignettes = TRUE) # important to build the vignette pak::local_install(\"path/to/APTS_Causal_Inference/APTSCausalInference_1.1.0.tar.gz\")  # or install.packages(\"path/to/APTS_Causal_Inference/APTSCausalInference_1.1.0.tar.gz\",     repos = NULL, type = \"source\")   # load package library(APTSCausalInference)  # Load the data data(bcrot)"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"load-packages","dir":"Articles","previous_headings":"","what":"Load packages","title":"Causal Inference","text":"","code":"library(APTSCausalInference) # required for data management and plots library(data.table) library(dplyr) library(ggplot2)  # required for analysis library(AIPW) library(cobalt) library(ipw) library(sandwich) library(stdReg) library(SuperLearner) library(survey)"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"load-the-rotterdam-breast-cancer-data-set","dir":"Articles","previous_headings":"","what":"Load the Rotterdam Breast Cancer data set","title":"Causal Inference","text":"","code":"# data(bcrot) load(\"../data/bcrot.RData\")"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"descriptive-analysis","dir":"Articles","previous_headings":"","what":"Descriptive Analysis","title":"Causal Inference","text":"Compare descriptively QOL take hormonal therapy","code":"# qol ~ hormon plot.qol <- ggplot(bcrot, aes(x=qol, after_stat(density)), fill=as.factor(hormon)) +     geom_histogram(aes(fill=as.factor(hormon)), color=c(\"#e9ecef\"), binwidth = 2) +     facet_grid(as.factor(hormon) ~ .) +     labs(x = \"Quality of life\", y = \"Density\") +     scale_fill_manual(values=c(\"#69b3a2\", \"#337CA0\"),                       name=\"Hormonal\\ntreatment\",                       breaks=c(\"0\", \"1\"),                       labels=c(\"no\", \"yes\")) +     theme_light() plot.qol # age ~ hormon plot.age <- ggplot(bcrot, aes(x=age, after_stat(density)), fill=as.factor(hormon)) +     geom_histogram(aes(fill=as.factor(hormon)), color=c(\"#e9ecef\"), binwidth = 2) +     facet_grid(as.factor(hormon) ~ .) +     labs(x = \"Age\", y = \"Density\") +     scale_fill_manual(values=c(\"#69b3a2\", \"#337CA0\"),                       name=\"Hormonal\\ntreatment\",                       breaks=c(\"0\", \"1\"),                       labels=c(\"no\", \"yes\")) +     theme_light() plot.age # Lymph nodes ~ hormon plot.nodes <- ggplot(bcrot, aes(x=nodes, after_stat(density)), fill=as.factor(hormon)) +     geom_histogram(aes(fill=as.factor(hormon)), color=c(\"#e9ecef\"), binwidth = 1) +     facet_grid(as.factor(hormon) ~ .) +     labs(x = \"Number of positive lymph nodes\", y = \"Density\") +     scale_fill_manual(values=c(\"#69b3a2\", \"#337CA0\"),                       name=\"Hormonal\\ntreatment\",                       breaks=c(\"0\", \"1\"),                       labels=c(\"no\", \"yes\")) +     theme_light() plot.nodes ggplot(bcrot, aes(x=enodes, after_stat(density)), fill=as.factor(hormon)) +   geom_histogram(aes(fill=as.factor(hormon)), color=c(\"#e9ecef\"), binwidth = 0.1) +   facet_grid(as.factor(hormon) ~ .) +   labs(x = \"Number of positive lymph nodes (transformed: exp(-0.12 * nodes))\",         y = \"Density\") +   scale_fill_manual(values=c(\"#69b3a2\", \"#337CA0\"),                     name=\"Hormonal\\ntreatment\",                     breaks=c(\"0\", \"1\"),                     labels=c(\"no\", \"yes\")) +   theme_light() # PgR (fmol/l), log ~ hormon ggplot(bcrot, aes(x=pr_1, after_stat(density)), fill=as.factor(hormon)) +   geom_histogram(aes(fill=as.factor(hormon)), color=c(\"#e9ecef\"), binwidth = 0.5) +   facet_grid(as.factor(hormon) ~ .) +   labs(x = \"PgR [fmol/l] (transformed: log(pr)\", y = \"Density\") +   scale_fill_manual(values=c(\"#69b3a2\", \"#337CA0\"),                     name=\"Hormonal\\ntreatment\",                     breaks=c(\"0\", \"1\"),                     labels=c(\"no\", \"yes\")) +   theme_light()"},{"path":[]},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"linear-model","dir":"Articles","previous_headings":"Analysis","what":"Linear Model","title":"Causal Inference","text":"compare unadjusted naive linear model (2-groups) naive adjusted main-effects-model (simplistic plausible; robust). can see unadjusted analysis (likely) biased - effect reverses upon adjustment. Note analysis alert us positivity issues simply extrapolates.","code":"# Unadjusted linear regression lm.ua <- lm(qol ~ hormon, data = bcrot) summary(lm.ua) ##  ## Call: ## lm(formula = qol ~ hormon, data = bcrot) ##  ## Residuals: ##      Min       1Q   Median       3Q      Max  ## -19.1327  -4.8698   0.5183   5.0403  16.2516  ##  ## Coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  19.1327     0.1265 151.276  < 2e-16 *** ## hormon1      -2.2928     0.3751  -6.112 1.11e-09 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 6.502 on 2980 degrees of freedom ## Multiple R-squared:  0.01238,    Adjusted R-squared:  0.01205  ## F-statistic: 37.36 on 1 and 2980 DF,  p-value: 1.109e-09 # Main-effects linear regression lm.a <- lm(qol ~ hormon + age + enodes + pr_1, data = bcrot) summary(lm.a) ##  ## Call: ## lm(formula = qol ~ hormon + age + enodes + pr_1, data = bcrot) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -3.6246 -0.6854 -0.0094  0.6695  3.5638  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|)     ## (Intercept) 22.517992   0.106599  211.24   <2e-16 *** ## hormon1      1.806415   0.062397   28.95   <2e-16 *** ## age         -0.253940   0.001461 -173.79   <2e-16 *** ## enodes       1.985456   0.073795   26.91   <2e-16 *** ## pr_1         2.495491   0.008312  300.22   <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 1.01 on 2977 degrees of freedom ## Multiple R-squared:  0.9762, Adjusted R-squared:  0.9762  ## F-statistic: 3.054e+04 on 4 and 2977 DF,  p-value: < 2.2e-16"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"propensity-score-ps","dir":"Articles","previous_headings":"Analysis","what":"Propensity score (PS)","title":"Causal Inference","text":"saw positivity issue nodes=0 younger ages. look detect propensity score (PS). begin simple main-effects-PS model.","code":"ps <- glm(hormon ~ age + enodes + pr_1,            data = bcrot,            family = binomial(link=\"logit\"))  # add fitted values to data set bcrot$ps <- fitted(ps)  # plot density ggplot(bcrot, aes(ps, fill = as.factor(hormon))) +   geom_density(alpha = 0.5) +   labs(x = \"Propensity score\",        y = \"Density\",        fill = \"Hormone\\ntreatment\") +   scale_fill_manual(values=c(\"#69b3a2\", \"#337CA0\"),                     name=\"Hormonal\\ntreatment\",                     breaks=c(\"0\", \"1\"),                     labels=c(\"no\", \"yes\")) +   theme_light() # Histogram ggplot(data = bcrot, aes(x = ps, after_stat(density), fill = as.factor(hormon))) +   #geom_histogram(alpha = 0.5, position = \"identity\", binwidth = 0.05) +   geom_histogram(aes(fill=as.factor(hormon)), color=c(\"#e9ecef\"), binwidth = 0.05) +   facet_grid(hormon ~ .) +   labs(x = \"Propensity score\", y = \"Density\") +   scale_fill_manual(values=c(\"#69b3a2\", \"#337CA0\"),                     name=\"Hormonal\\ntreatment\",                     breaks=c(\"0\", \"1\"),                     labels=c(\"no\", \"yes\")) +   theme_light()"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"inverse-probability-treatment-weighting","dir":"Articles","previous_headings":"Analysis","what":"Inverse Probability Treatment Weighting","title":"Causal Inference","text":"also find extreme weights (though, seen worse). weighted data achieve balance age enodes; due lack positivity /PS model bad.","code":"bcrot$w <- (as.numeric(as.character(bcrot$hormon)) / bcrot$ps) +             ((1 - as.numeric(as.character(bcrot$hormon))) / (1 - bcrot$ps)) summary(bcrot$w) ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ##   1.008   1.035   1.073   1.854   1.206  63.482  # Plot inverse probability weights vs. index ggplot(bcrot, aes(x = 1:nrow(bcrot), y = w)) +    geom_point()  +   xlab(\" \") +   ylab(\" \") +    ylim(0, 65) +   theme_minimal() # Covariate balance plot (love plot - named after Thomas E. Love) cobalt::love.plot(hormon ~ age + enodes + pr_1,                    data = bcrot,                    weights = bcrot$w,                   s.d.denom = \"pooled\",                   thresholds = c(m = .1))"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"use-subset","dir":"Articles","previous_headings":"Analysis","what":"Use subset","title":"Causal Inference","text":"decide effect ill-defined nodes=0 age<40; thus create meaningful subset population compare treatment -treatment. Note lose half (ca. 1500) untreated, 7 treated patients.","code":"plot.age plot.nodes # restrict dataset and transformation bcrot2 <- bcrot %>% filter(age >= 40,                            nodes > 0) %>%                     mutate(age.2 = age * age) %>%    # add age²                     select(-c(ps, w))    table(bcrot2$hormon) ##  ##    0    1  ## 1045  332 table(bcrot$hormon) ##  ##    0    1  ## 2643  339   # Main-effects and adjustes linear regression models using the subset lm.ua2 <- lm(qol ~ hormon, data = bcrot2) summary(lm.ua2) ##  ## Call: ## lm(formula = qol ~ hormon, data = bcrot2) ##  ## Residuals: ##      Min       1Q   Median       3Q      Max  ## -18.1346  -5.1450   0.4281   4.8286  16.7480  ##  ## Coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  18.1346     0.1977  91.744  < 2e-16 *** ## hormon1      -1.4797     0.4026  -3.676 0.000246 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 6.39 on 1375 degrees of freedom ## Multiple R-squared:  0.00973,    Adjusted R-squared:  0.00901  ## F-statistic: 13.51 on 1 and 1375 DF,  p-value: 0.0002464 lm.a2 <- lm(qol ~ hormon + age + enodes + pr_1, data = bcrot2) summary(lm.a2) ##  ## Call: ## lm(formula = qol ~ hormon + age + enodes + pr_1, data = bcrot2) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -3.5002 -0.6780  0.0090  0.6589  3.5119  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|)     ## (Intercept) 22.958880   0.169928  135.11   <2e-16 *** ## hormon1      1.807219   0.065269   27.69   <2e-16 *** ## age         -0.261386   0.002465 -106.03   <2e-16 *** ## enodes       2.029785   0.113220   17.93   <2e-16 *** ## pr_1         2.487438   0.012465  199.56   <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 1.001 on 1372 degrees of freedom ## Multiple R-squared:  0.9758, Adjusted R-squared:  0.9757  ## F-statistic: 1.381e+04 on 4 and 1372 DF,  p-value: < 2.2e-16"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"estimate-marginal-structural-model-by-hand","dir":"Articles","previous_headings":"Analysis","what":"Estimate Marginal structural model “by hand”","title":"Causal Inference","text":"First fit new complex PS model (achieve balance earlier) check balance. Next fit MSM weighted lm; note underestimated standard errors! Obtain valid SEs sandwich estimation.","code":"ps <- glm(hormon ~ age + age.2 + enodes + age*pr_1,           data = bcrot2,            family = binomial(link=\"logit\")) bcrot2$ps <- fitted(ps) bcrot2$w <- (as.numeric(as.character(bcrot2$hormon)) / bcrot2$ps) +             ((1 - as.numeric(as.character(bcrot2$hormon))) / (1 - bcrot2$ps))  # Checking balance cobalt::love.plot(hormon ~ age + age.2 + enodes + age*pr_1,                    data = bcrot2,                    weights = bcrot2$w,                   s.d.denom = \"pooled\",                   thresholds = c(m = .1)) cobalt::bal.plot(ps, \"pr_1\", which = \"both\", colors = c(\"#69b3a2\", \"#337CA0\"), data=bcrot2) cobalt::bal.plot(ps, \"age\", which = \"both\", colors = c(\"#69b3a2\", \"#337CA0\"), data=bcrot2) cobalt::bal.plot(ps, \"enodes\", which = \"both\", colors = c(\"#69b3a2\", \"#337CA0\"), data=bcrot2) # Weights based on ~age + age.2 + enodes + age*pr_1 model_w <- lm(qol ~ hormon , weights = w, data = bcrot2) summary(model_w) ##  ## Call: ## lm(formula = qol ~ hormon, data = bcrot2, weights = w) ##  ## Weighted Residuals: ##     Min      1Q  Median      3Q     Max  ## -35.763  -6.569   0.223   5.818  60.046  ##  ## Coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  17.3495     0.2518  68.902  < 2e-16 *** ## hormon1       2.0708     0.3561   5.816  7.5e-09 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 9.347 on 1375 degrees of freedom ## Multiple R-squared:  0.02401,    Adjusted R-squared:  0.0233  ## F-statistic: 33.82 on 1 and 1375 DF,  p-value: 7.496e-09  # Variance estimation using the robust sandwich variance estimator (sandwich_se <- diag(sandwich::vcovHC(model_w, type = \"HC\"))^0.5) ## (Intercept)     hormon1  ##   0.2074796   0.6009953 # confidence interval sandwichCI <- c(coef(model_w)[2] - 1.96 * sandwich_se[2],                       coef(model_w)[2] + 1.96 * sandwich_se[2])"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"estimate-marginal-structural-model-using-the-ipw-package","dir":"Articles","previous_headings":"Analysis","what":"Estimate Marginal structural model using the IPW package","title":"Causal Inference","text":"package ipw can whole MSM one. Also inbuilt plot checking weights distribution.","code":"ipw2 <- ipw::ipwpoint(exposure = hormon,                        family = \"binomial\", link = \"logit\",                       denominator = ~ age + age.2 + enodes + age*pr_1,                       data = bcrot2) bcrot2$ipw <- ipw2$ipw.weights  # Plot Inverse Probability Weights summary(ipw2$ipw.weights) ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ##   1.019   1.143   1.423   2.002   1.914  40.597 ipw::ipwplot(weights = ipw2$ipw.weights,               logscale = FALSE,              main = \"Stabilized weights\",               xlab = \"Weights\",              xlim = c(1, 10)) # Marginal structural model for the causal effect of hormon on qol # corrected for confounding using inverse probability weighting # with robust standard error from the survey package. model_sm2 <- survey::svyglm(qol ~ hormon,                             design = svydesign(~ 1,                                                 weights = ~ipw,                                                data = bcrot2)) summary(model_sm2) ##  ## Call: ## svyglm(formula = qol ~ hormon, design = svydesign(~1, weights = ~ipw,  ##     data = bcrot2)) ##  ## Survey design: ## svydesign(~1, weights = ~ipw, data = bcrot2) ##  ## Coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  17.3495     0.2076  83.590  < 2e-16 *** ## hormon1       2.0708     0.6012   3.444  0.00059 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## (Dispersion parameter for gaussian family taken to be 43.61401) ##  ## Number of Fisher Scoring iterations: 2 confint(model_sm2) ##                  2.5 %    97.5 % ## (Intercept) 16.9423138 17.756631 ## hormon1      0.8914133  3.250204"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"compare-confidence-intervals","dir":"Articles","previous_headings":"Analysis","what":"Compare confidence intervals","title":"Causal Inference","text":"","code":"msm.out <- rbind(cbind(coef(model_w), confint(model_w))[2,],                  c(coef(model_w)[2], sandwichCI),                  cbind(coef(model_sm2), confint(model_sm2))[2,]) dimnames(msm.out) <- list(c(\"MSM, naive\", \"MSM, robust SE (sandwich):\",\"MSM, robust SE (ipw):\"),                            c(\"est\", colnames(msm.out)[2:3])) msm.out ##                                 est     2.5 %   97.5 % ## MSM, naive                 2.070809 1.3723118 2.769305 ## MSM, robust SE (sandwich): 2.070809 0.8928578 3.248759 ## MSM, robust SE (ipw):      2.070809 0.8914133 3.250204"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"investigate-extreme-weights---truncation","dir":"Articles","previous_headings":"Analysis","what":"Investigate (extreme) weights - truncation?","title":"Causal Inference","text":"","code":"# truncate weights wq <- quantile(bcrot2$ipw, probs = c(0.025, 0.975))  bcrot2$wt <- if_else(bcrot2$ipw < wq[1], wq[1], bcrot2$ipw) bcrot2$wt <- if_else(bcrot2$wt  > wq[2], wq[2], bcrot2$wt)  summary(bcrot2$ipw) ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ##   1.019   1.143   1.423   2.002   1.914  40.597 summary(bcrot2$wt) ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ##   1.030   1.143   1.423   1.830   1.914   5.742  # Plot weight vs. index without and with truncation ggplot(bcrot2, aes(x = 1:nrow(bcrot2), y = ipw)) +    geom_point()  +   xlab(\" \") +   ylab(\" \") +    ylim(0, 65) +   labs(title = \"Not truncated\") +   theme_minimal() ggplot(bcrot2, aes(x = 1:nrow(bcrot2), y = wt)) +    geom_point()  +   xlab(\" \") +   ylab(\" \") +    ylim(0, 10) +   labs(title=\"Truncated weights\") +    theme_minimal() # loveplot without and with truncation # truncation loses some balance - no real need for truncation here cobalt::love.plot(hormon ~ age + age.2 + enodes + age*pr_1,                       data = bcrot2,                       weights = bcrot2$ipw,                      s.d.denom = \"pooled\",                      thresholds = c(m = .1),                      title = \"Not truncated\"                      ) cobalt::love.plot(hormon ~ age + age.2 + enodes + age*pr_1,                        data = bcrot2,                        weights = bcrot2$wt,                       s.d.denom = \"pooled\",                       thresholds = c(m = .1),                       title = \"Truncated weights\")"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"regression-standardization","dir":"Articles","previous_headings":"Analysis","what":"Regression standardization","title":"Causal Inference","text":"Using correct outcoem model (known generated QoL known model), estimate population average effect (standard errors) standardization package stdReg.","code":"fit <- glm(qol ~ hormon*age + hormon*age.2 + hormon*enodes + hormon*pr_1 + age*pr_1,            data = bcrot2) fit.std <- stdGlm(fit = fit, data = as.data.frame(bcrot2), X = \"hormon\") print(summary(fit.std)) ##  ## Formula: qol ~ hormon * age + hormon * age.2 + hormon * enodes + hormon *  ##     pr_1 + age * pr_1 ## Family: gaussian  ## Link function: identity  ## Exposure:  hormon  ##  ##   Estimate Std. Error lower 0.95 upper 0.95 ## 0     17.4      0.176       17.0       17.7 ## 1     19.3      0.193       18.9       19.7 plot(fit.std) # Confidence interval: Mean difference  summary(fit.std, contrast = \"difference\", reference = \"0\") ##  ## Formula: qol ~ hormon * age + hormon * age.2 + hormon * enodes + hormon *  ##     pr_1 + age * pr_1 ## Family: gaussian  ## Link function: identity  ## Exposure:  hormon  ## Reference level:  hormon = 0  ## Contrast:  difference  ##  ##   Estimate Std. Error lower 0.95 upper 0.95 ## 0     0.00       0.00       0.00       0.00 ## 1     1.95       0.08       1.79       2.11"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"double-machine-learning---augmented-inverse-probability-weighting","dir":"Articles","previous_headings":"Analysis","what":"Double machine learning - Augmented Inverse Probability Weighting","title":"Causal Inference","text":"use AIPW default settings.","code":"# Build SuperLearner libraries for outcome (Q) and exposure models (g) sl.lib <- c(\"SL.mean\",\"SL.glm\")    # Construct an aipw object for later estimations  AIPW_SL <- AIPW::AIPW$new(Y = bcrot2$qol,                           A = as.integer(as.character(bcrot2$hormon)),                           W = subset(bcrot2, select = c(\"enodes\", \"age\", \"pr_1\")),                            Q.SL.library = sl.lib,                           g.SL.library = sl.lib,                           k_split = 10,                           verbose = TRUE)  # Fit the data to the AIPW object and check the balance of propensity scores raipw <- AIPW_SL$fit()$summary() ## Done! ##                  Estimate     SE 95% LCL 95% UCL    N ## Mean of Exposure    19.25 0.1884   18.88   19.61  332 ## Mean of Control     17.35 0.1760   17.01   17.70 1045 ## Mean Difference      1.89 0.0715    1.75    2.03 1377 AIPW_SL$fit()$plot.p_score()$plot.ip_weights() ## Done! # Truncate weights (default truncation is set to 0.025) AIPW_SL$fit()$summary(g.bound = c(0.05, 0.95))$plot.p_score()$plot.ip_weights() ## Done! ##                  Estimate     SE 95% LCL 95% UCL    N ## Mean of Exposure    19.24 0.1880   18.87   19.61  332 ## Mean of Control     17.35 0.1759   17.01   17.70 1045 ## Mean Difference      1.89 0.0705    1.75    2.03 1377 # Calculate average treatment effects among the treated/untreated (controls) (ATT/ATC) AIPW_SL$stratified_fit()$summary() ## Done! ##                     Estimate     SE 95% LCL 95% UCL    N ## Mean of Exposure       19.30 0.1896   18.93   19.67  332 ## Mean of Control        17.35 0.1760   17.01   17.70 1045 ## Mean Difference         1.95 0.0712    1.81    2.09 1377 ## ATT Mean Difference     1.76 0.0623    1.64    1.89 1377 ## ATC Mean Difference     1.97 0.2249    1.53    2.41 1377   # extract weights for loveplots # AIPW_SL$plot.ip_weights() bcrot2$aipw <- AIPW_SL$ip_weights.plot$data$ip_weights  # loveplots + AIPW cobalt::love.plot(hormon ~ age*enodes*pr_1 +                             age.2*enodes*pr_1,                    data = bcrot2,                    weights = bcrot2$aipw,                   s.d.denom = \"pooled\",                   thresholds = c(m = .1))"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/articles/solution.html","id":"compare-results-in-the-restricted-sample","dir":"Articles","previous_headings":"Analysis","what":"Compare results in the restricted sample","title":"Causal Inference","text":"summary different methods - know regression standardization correctly specified; know methods; know true effect synthetic QoL outcome. Note much larger uncertainty IPW.","code":"out <- rbind(c(2.07, rep(NA,3)),               c(coef(summary(lm.a2))[2,1:2], confint(lm.a2)[2,]),              c(summary(model_sm2)$coefficients[2,1:2], confint(model_sm2)[2,]),              summary(fit.std, contrast = \"difference\", reference = \"0\")$est.table[2,],              raipw$estimates$RD) dimnames(out) <- list(c(\"True ATE\", \"LM\", \"IPW\", \"RS\", \"AIPW\"),                       c(\"Estimate\", \"SE\", \"lower\", \"upper\")) print(round(out,3)) ##          Estimate    SE lower upper ## True ATE    2.070    NA    NA    NA ## LM          1.807 0.065 1.679 1.935 ## IPW         2.071 0.601 0.891 3.250 ## RS          1.951 0.080 1.795 2.108 ## AIPW        1.951 0.071 1.811 2.090"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"R Foraita. Maintainer.","code":""},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"c , \"foraita@leibniz-bips.de\") e=, person, \"didelez@leibniz-bips.de\") e=, person, \"evans@stats.ox.ac.uk\") e=, person, \"karla.diaz-ordaz@ucl.ac.uk\") e=, ) (2025). APTSCausalInference: Practicals APTS Module \"Causal Inference\" 2025 (V. Didelez, R.J. Evans K. Diaz-Ordaz). R package version 1.1.0, https://bips-hb.github.io/APTS_Causal_Inference/.","code":"@Manual{,   title = {APTSCausalInference: Practicals for the APTS Module \"Causal Inference\" 2025 (V. Didelez, R.J. Evans and K. Diaz-Ordaz)},   author = {Authors@R: c and email = \"foraita@leibniz-bips.de\") and {person} and email = \"didelez@leibniz-bips.de\") and {person} and email = \"evans@stats.ox.ac.uk\") and {person} and email = \"karla.diaz-ordaz@ucl.ac.uk\") and {)}},   year = {2025},   note = {R package version 1.1.0},   url = {https://bips-hb.github.io/APTS_Causal_Inference/}, }"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/index.html","id":"practicals-for-the-apts-module-causal-inference-2025","dir":"","previous_headings":"","what":"Practicals for the APTS Module ","title":"Practicals for the APTS Module ","text":"V. Didelez, R.J. Evans K. Diaz-Ordaz Practicals Module “Causal Inference” Academy PhD Training Statistics (https://warwick.ac.uk/fac/sci/statistics/apts/programme/causinf/) APTS recommend using Codespace set Louis Aslett Machine Learning module.","code":""},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Practicals for the APTS Module ","text":"use machine, ensure R v4.0.0 higher. Windows users, please make sure rtools installed computer! (https://cran.r-project.org/bin/windows/Rtools/) 💡 Note step--step guide install package can found : https://bips-hb.github.io/APTS_Causal_Inference/articles/installation.html","code":""},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/index.html","id":"code-snippets","dir":"","previous_headings":"","what":"Code Snippets","title":"Practicals for the APTS Module ","text":"Visit https://bips-hb.github.io/APTS_Causal_Inference/articles/Commands.html collection handy code snippets. typical R commands conducting causal inference. help solving practical exercises course support understanding application discussed methods. full solutions provided course.","code":""},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/reference/bcrot.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotterdam data set on breast cancer — bcrot","title":"Rotterdam data set on breast cancer — bcrot","text":"Rotterdam data set includes 2982 primary breast cancers patients whose data whose records included Rotterdam tumor bank. generated synthetic outcome ‘qol’ (health related quality life, continuous measure) based existing data.","code":""},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/reference/bcrot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotterdam data set on breast cancer — bcrot","text":"","code":"data(bcrot)"},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/reference/bcrot.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rotterdam data set on breast cancer — bcrot","text":"data frame 2982 observations following 6 variables: hormon hormonal treatment (0=, 1=yes) age age diagnosis nodes number positive lymph nodes enodes exp(-0.12 * nodes) pr_1 progestorone receptors (fmol/l), transformed: log(pr + 1) qol health realted quality life","code":""},{"path":"https://bips-hb.github.io/APTS_Causal_Inference/reference/bcrot.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Rotterdam data set on breast cancer — bcrot","text":"https://www.pclambert.net/data/rott2b.dta","code":""}]
